{"version":3,"file":"static/js/257.216f4769.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/tmbdApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 20px 0 20px 0;\n  gap: 24px;\n`;\n\nexport const List = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n  padding: 0 20px 0 0;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  gap: 12px;\n  padding: 0 0 20px 0;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: #4f46e5;\n    border: 3px solid #4f46e5;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/tmbdApi';\nimport Loader from 'components/Loader/Loader';\nimport { Container, List, ListInfo } from './MovieDetails.styled';\nimport noImage from '../../images/noImage.png';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetailsData = async () => {\n      try {\n        setLoading(true);\n        const detailMovie = await fetchMovieDetails(movieId);\n        setMovieInfo(detailMovie);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const { title, release_date, overview, genres, poster_path, original_title } =\n    movieInfo;\n\n  const companiesList = movieInfo.production_companies?.map(\n    ({ id, logo_path, name }) =>\n      logo_path && (\n        <li key={id}>\n          {logo_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n              alt={name}\n              style={{\n                maxHeight: 50,\n                maxWidth: 200,\n                marginRight: 30,\n                marginTop: 10,\n              }}\n            />\n          )}\n        </li>\n      )\n  );\n\n  const roundedPopularity = Math.round(movieInfo.vote_average * 10);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <button\n          className=\"rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n          type=\"button\"\n        >\n          Go back\n        </button>\n      </Link>\n\n      <Container>\n        <img\n          width=\"300px\"\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `${noImage}`\n          }\n          alt={original_title}\n        />\n        <div>\n          <h1 className=\"text-2xl pb-4 font-bold\">\n            {title} ({release_date.slice(0, 4)})\n          </h1>\n          <p className=\"pb-4\">User score: {roundedPopularity}%</p>\n          <h2 className=\"text-2xl pb-4 font-bold\">Overview</h2>\n          <p className=\"pb-4\">{overview}</p>\n          <h2 className=\"text-2xl pb-4 font-bold\">Genres</h2>\n          <List>\n            {genres.map(genre => (\n              <li className=\"pb-4\" key={genre.id}>\n                {genre.name}\n              </li>\n            ))}\n          </List>\n\n          {companiesList[0] !== null && companiesList.length > 0 && (\n            <>\n              <h2 className=\"text-2xl pb-4 font-bold\">Production companies</h2>\n              <ul className=\"flex\">{companiesList}</ul>\n            </>\n          )}\n        </div>\n      </Container>\n\n      <hr />\n\n      <div>\n        <h3 className=\"text-2xl pb-4 font-bold pt-4\">Additional information</h3>\n        <ListInfo>\n          <li className=\"rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li className=\"rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ListInfo>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '4ccb1d05d841e073192ef611bb37b9bb';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","ListInfo","_templateObject3","_templateObject4","_movieInfo$production","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","fetchMovieDetailsData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","detailMovie","_context","prev","next","fetchMovieDetails","sent","t0","console","error","finish","stop","apply","arguments","_jsx","Loader","title","release_date","overview","genres","poster_path","original_title","companiesList","production_companies","map","_ref2","id","logo_path","name","children","src","concat","alt","style","maxHeight","maxWidth","marginRight","marginTop","roundedPopularity","Math","round","vote_average","_jsxs","_Fragment","Link","to","state","from","className","type","width","noImage","slice","genre","length","Outlet","axios","API_KEY","fetchTrending","response","abrupt","data","results","fetchSearchByKeyword","_callee2","keyword","_context2","_x","_ref3","_callee3","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}